module top_module (
    input clk,
    input reset,   // Synchronous reset
    input s,
    input w,
    output z
);
	parameter S0=1'b0,S1=1'b1;
    reg state,next_state;
    reg [1:0] clk_cnt,w_cnt;
    always@(posedge clk) begin
          if(reset)
              state<=S0;
          else
              state<=next_state;
      end
    always@(*) begin
        case(state)
            S0:next_state<=s?S1:S0;
            S1:next_state<=S1;
            default:next_state<=S0;
        endcase
    end
    //计数器模块
    always@(posedge clk) begin
        if(reset) begin
            clk_cnt<=2'b00;
        	w_cnt<=2'b00;
        end
        else begin
            if(state==S1) begin
                if(clk_cnt==2'b10) begin
                    clk_cnt<=2'b00;
        			w_cnt<=2'b00;
                end
        		else begin
                    clk_cnt<=clk_cnt+2'b01;
        			if(w==1)
            			w_cnt<=w_cnt+2'b01;
                 	else
                       w_cnt<=w_cnt;
                end
        end
    end
 end
    always@(posedge clk)
        if(reset)
            z<=0;
    else if(state==S1)
        z<=(clk_cnt==2&&w_cnt==1&&w==1)||(clk_cnt==2&&w_cnt==2&&w==0);
    	else
            z<=0;
            
endmodule
